name: SDKs Instrumented Tests

on:
  workflow_dispatch:
    inputs:
      testTimeoutSeconds:
        description: 'Seconds for test timeout'
        required: true
        default: 40  # should be same as env.TEST_TIMEOUT_SECONDS
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
      - master

env:
  TEST_TIMEOUT_SECONDS: 40 # Predefined timeout for integration tests

concurrency:
  # Support push/pr as event types with different behaviors each:
  # 1. push: queue up builds by branch
  # 2. pr: only allow one run per PR
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref_name }}
  # If there is already a workflow running for the same pull request, cancel it
  # For non-PR triggers queue up builds
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  sdk_tests:
    strategy:
      fail-fast: false
      matrix:
        conf: [
          { name: Sign SDK, command: ":protocol:sign:connectedCheck", report: '/Users/runner/work/WalletConnectKotlinV2/WalletConnectKotlinV2/protocol/sign/build/reports/**' },
          { name: Android Core SDK, command: ":core:android:connectedCheck", report: '/Users/runner/work/WalletConnectKotlinV2/WalletConnectKotlinV2/core/android/build/reports/**' },
        ]
        api-level: [ 32 ] # JUnit5 only supports API younger or equal to 26
        target: [ google_apis ]
        profile: [ Nexus 6 ]
        arch: [ arm64-v8a]

    name: ${{ matrix.conf.name }} API ${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.profile }}-${{ matrix.arch }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Run instrumented tests
        uses: ./.github/actions/ci_instrumented_tests
        with:
          shouldCache: true
          name: ${{ matrix.conf.name }}
          command: ${{ matrix.conf.command }}
          report: ${{ matrix.conf.report }}
          projectId: ${{ secrets.WC_CLOUD_PROJECT_ID }}
          testTimeoutSeconds: ${{ github.event.inputs.testTimeoutSeconds || env.TEST_TIMEOUT_SECONDS }} # Prioritise dispatch input timeout over env one
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          profile: ${{ matrix.profile }}
          arch: ${{ matrix.arch }}