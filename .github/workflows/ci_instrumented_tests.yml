name: SDKs Instrumented Tests

on:
  workflow_dispatch:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
      - master


concurrency:
  # Support push/pr as event types with different behaviors each:
  # 1. push: queue up builds by branch
  # 2. pr: only allow one run per PR
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref_name }}
  # If there is already a workflow running for the same pull request, cancel it
  # For non-PR triggers queue up builds
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  sdk_tests:
    strategy:
      fail-fast: false
      matrix:
        conf: [
          { name: Sign SDK, command: ":sign:sdk:connectedCheck" },
        ]
        api-level: [ 23, 32, 33, 34 ]
        target: [ google_apis ]
        profile: [ Nexus 6 ]
        arch: [ x86_64 ]
#        Example of adding individual entry:
#        include:
#          - api-level: 23
#            target: google_apis
#            profile: Nexus 6
#            conf: { name: Sign SDK, command: ":sign:sdk:connectedCheck" }

    name: ${{ matrix.conf.name }} API ${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.profile }}-${{ matrix.arch }}
    runs-on: macos-latest-xl
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.arch }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          profile: ${{ matrix.profile }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Instrumented tests
        env:
          WC_CLOUD_PROJECT_ID: ${{ secrets.WC_CLOUD_PROJECT_ID }}
          TEST_TIMEOUT_SECONDS: 180
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          profile: ${{ matrix.profile }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew ${{ matrix.conf.command }}

      - name: Stop Gradle
        run: ./gradlew --stop
